<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OpenGL学习笔记</title>
      <link href="/2023/09/28/opengl-xue-xi-bi-ji/"/>
      <url>/2023/09/28/opengl-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>写在最前面，我的开发主要在VS2022上面，通过代码学程序，很多函数是不懂的。这个时候<strong>VS的快捷键F1就可以快速查看函数文档，很有用。</strong>（glut函数按F1查看不到）<a href="https://www.opengl.org/resources/libraries/glut/spec3/spec3.html">GLUT API, version 3 — GLUT API，版本3 (opengl.org)</a>这里是参考文档<br><a href="https://zhuanlan.zhihu.com/p/374920616">opengl新手教程（通俗易懂） - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/Wang_Dou_Dou_/article/details/121240714">OpenGL初学者入门——学习指南【共 9 篇文章】_opengl学习_一支王同学的博客-CSDN博客</a></p><p><a href="https://learnopengl.com/Getting-started/OpenGL">LearnOpenGL - OpenGL — 学习OpenGL- OpenGL</a></p><p><a href="https://learnopengl-cn.github.io/">主页 - LearnOpenGL CN (learnopengl-cn.github.io)</a></p><p><img src="https://cdn.jsdelivr.net/gh/liwuxuan/myblog@main/img/dbc430ed349a4411abcf3efba7409c5f.png" alt="img"></p><h1 id="以下是一些常用的OpenGL函数的清单，包括它们的用法和参数含义："><a href="#以下是一些常用的OpenGL函数的清单，包括它们的用法和参数含义：" class="headerlink" title="以下是一些常用的OpenGL函数的清单，包括它们的用法和参数含义："></a>以下是一些常用的OpenGL函数的清单，包括它们的用法和参数含义：</h1><ol><li><p><strong>glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</strong></p><ul><li>用法：设置背景清除颜色。</li><li>参数含义：<ul><li><code>red</code>：红色分量，取值范围为0.0到1.0。</li><li><code>green</code>：绿色分量，取值范围为0.0到1.0。</li><li><code>blue</code>：蓝色分量，取值范围为0.0到1.0。</li><li><code>alpha</code>：透明度分量，取值范围为0.0到1.0。</li></ul></li></ul></li><li><p><strong>glClear(GLbitfield mask)</strong></p><ul><li>用法：清除指定的缓冲区。</li><li>参数含义：<ul><li><code>mask</code>：要清除的缓冲区，可以是<code>GL_COLOR_BUFFER_BIT</code>（颜色缓冲区）、<code>GL_DEPTH_BUFFER_BIT</code>（深度缓冲区）、<code>GL_STENCIL_BUFFER_BIT</code>（模板缓冲区）的组合。</li></ul></li></ul></li><li><p><strong>glMatrixMode(GLenum mode)</strong></p><ul><li>用法：设置当前矩阵模式。</li><li>参数含义：<ul><li><code>mode</code>：矩阵模式，可以是<code>GL_MODELVIEW</code>（模型视图矩阵）、<code>GL_PROJECTION</code>（投影矩阵）、<code>GL_TEXTURE</code>（纹理矩阵）之一。</li></ul></li></ul></li><li><p><strong>glLoadIdentity()</strong></p><ul><li>用法：将当前矩阵重置为单位矩阵。</li></ul></li><li><p><strong>gluOrtho2D(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top)</strong></p><ul><li>用法：设置正交投影矩阵。</li><li>参数含义：<ul><li><code>left</code>、<code>right</code>、<code>bottom</code>、<code>top</code>：视图体积的边界。</li></ul></li></ul></li><li><p><strong>glBegin(GLenum mode)</strong> 和 <strong>glEnd()</strong></p><ul><li>用法：定义要绘制的图元的起始和结束。</li><li>参数含义：<ul><li><code>mode</code>：绘制的图元类型，如<code>GL_POINTS</code>（点）、<code>GL_LINES</code>（线段）、<code>GL_TRIANGLES</code>（三角形）等。</li></ul></li></ul></li><li><p><strong>glVertex2f(GLfloat x, GLfloat y)</strong></p><ul><li>用法：指定一个顶点坐标。</li><li>参数含义：<ul><li><code>x</code>、<code>y</code>：顶点的x和y坐标。</li></ul></li></ul></li><li><p><strong>glColor3f(GLfloat red, GLfloat green, GLfloat blue)</strong></p><ul><li>用法：设置当前颜色。</li><li>参数含义：<ul><li><code>red</code>、<code>green</code>、<code>blue</code>：颜色的红、绿、蓝分量，取值范围为0.0到1.0。</li></ul></li></ul></li><li><p><strong>glPushMatrix()</strong> 和 <strong>glPopMatrix()</strong></p><ul><li>用法：保存和恢复当前矩阵状态。</li></ul></li><li><p><strong>glTranslatef(GLfloat x, GLfloat y, GLfloat z)</strong></p><ul><li>用法：执行平移变换。</li><li>参数含义：<ul><li><code>x</code>、<code>y</code>、<code>z</code>：平移的距离。</li></ul></li></ul></li><li><p><strong>glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)</strong></p><ul><li>用法：执行旋转变换。</li><li>参数含义：<ul><li><code>angle</code>：旋转角度（度）。</li><li><code>x</code>、<code>y</code>、<code>z</code>：旋转轴的方向。</li></ul></li></ul></li><li><p><strong>glViewport(GLint x, GLint y, GLsizei width, GLsizei height)</strong></p><ul><li>用法：设置视口。</li><li>参数含义：<ul><li><code>x</code>、<code>y</code>：视口的左下角坐标。</li><li><code>width</code>、<code>height</code>：视口的宽度和高度。</li></ul></li></ul></li></ol><p>这些函数是OpenGL中的一些基本函数，用于设置绘图状态、定义几何图元、执行变换和控制渲染行为。通过组合和调用这些函数，可以创建各种复杂的图形效果。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;GL/glut.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 窗口宽度和高度</span></span><br><span class="line"><span class="type">int</span> windowWidth = <span class="number">800</span>;</span><br><span class="line"><span class="type">int</span> windowHeight = <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">glClearColor</span>(<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>); <span class="comment">// 设置背景色为黑色</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">glClear</span>(GL_COLOR_BUFFER_BIT); <span class="comment">// 清除颜色缓冲区</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制一个彩色三角形</span></span><br><span class="line">    <span class="built_in">glBegin</span>(GL_TRIANGLES);</span><br><span class="line">    <span class="built_in">glColor3f</span>(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>); <span class="comment">// 设置当前绘制颜色为红色</span></span><br><span class="line">    <span class="built_in">glVertex2f</span>(<span class="number">0.0</span>, <span class="number">0.5</span>); <span class="comment">// 第一个顶点坐标</span></span><br><span class="line">    <span class="built_in">glColor3f</span>(<span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>); <span class="comment">// 设置当前绘制颜色为绿色</span></span><br><span class="line">    <span class="built_in">glVertex2f</span>(<span class="number">-0.5</span>, <span class="number">-0.5</span>); <span class="comment">// 第二个顶点坐标</span></span><br><span class="line">    <span class="built_in">glColor3f</span>(<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>); <span class="comment">// 设置当前绘制颜色为蓝色</span></span><br><span class="line">    <span class="built_in">glVertex2f</span>(<span class="number">0.5</span>, <span class="number">-0.5</span>); <span class="comment">// 第三个顶点坐标</span></span><br><span class="line">    <span class="built_in">glEnd</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">glFlush</span>(); <span class="comment">// 刷新缓冲区，绘制图形</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 窗口大小变化回调函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reshape</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height)</span> </span>{</span><br><span class="line">    <span class="built_in">glViewport</span>(<span class="number">0</span>, <span class="number">0</span>, width, height); <span class="comment">// 设置视口，充满整个窗口</span></span><br><span class="line">    <span class="built_in">glMatrixMode</span>(GL_PROJECTION);</span><br><span class="line">    <span class="built_in">glLoadIdentity</span>();<span class="comment">//glLoadIdentity() 是OpenGL中的一个函数，用于将当前的矩阵重置为单位矩阵。单位矩阵是一个特殊的矩阵，对于矩阵乘法操作，它是一个“中性元素”。当你调用 glLoadIdentity() 时，它会将当前矩阵设置为单位矩阵，即没有任何变换或投影应用在对象上。</span></span><br><span class="line">    <span class="built_in">gluOrtho2D</span>(<span class="number">-1.0</span>, <span class="number">1.0</span>, <span class="number">-1.0</span>, <span class="number">1.0</span>); <span class="comment">// 设置正交投影矩阵，范围为[-1, 1]在X和Y轴上</span></span><br><span class="line">    <span class="built_in">glMatrixMode</span>(GL_MODELVIEW);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> </span>{</span><br><span class="line">    <span class="built_in">glutInit</span>(&amp;argc, argv); <span class="comment">// 初始化GLUT</span></span><br><span class="line">    <span class="built_in">glutInitDisplayMode</span>(GLUT_SINGLE | GLUT_RGBA); <span class="comment">// 设置显示模式</span></span><br><span class="line">    <span class="built_in">glutInitWindowSize</span>(windowWidth, windowHeight); <span class="comment">// 设置窗口尺寸</span></span><br><span class="line">    <span class="built_in">glutCreateWindow</span>(<span class="string">"OpenGL Template"</span>); <span class="comment">// 创建窗口并设置标题</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">init</span>(); <span class="comment">// 初始化OpenGL</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">glutDisplayFunc</span>(display); <span class="comment">// 设置渲染函数</span></span><br><span class="line">    <span class="built_in">glutReshapeFunc</span>(reshape); <span class="comment">// 设置窗口大小变化回调函数</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">glutMainLoop</span>(); <span class="comment">// 进入OpenGL主循环，等待用户交互和渲染</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><a href="https://blog.csdn.net/aa941096979/article/details/50843596">OpenGL 解析glBegin()_Hi_乌龟的博客-CSDN博客</a>主要是看mode</p><p>glut参考链接[<a href="https://blog.csdn.net/qq_39377889/article/details/126946503">OpenGL笔记]glut入门（1）_glut opengl_Binarydog_Lee的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/deniece1/article/details/102642934">GLUT及其函数的用法整理_glutcreatewindow用法_deniece1的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/2303_77480410/article/details/130011521">opengl-glut(内含总结的学习资源)_glut文档_Osatnb.c的博客-CSDN博客</a></p><p>glut现在已经不是一个流行的窗口管理选择，或者说已经被弃用，但是在示例中还是经常能看见。</p><p>经过比较，感觉还是glut更方便。(⊙o⊙)…</p><p>后面还是考虑一下freeglut吧 -_-||</p>]]></content>
      
      
      
        <tags>
            
            <tag> OpenGL </tag>
            
            <tag> VS2022 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/27/hello-world/"/>
      <url>/2023/09/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
